<%- include("partials/header", {pageTitle: "Web Demos",
                                link: "web-demos",
                                subTitle: "Here I show off small frontend apps."}) -%>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<div class="section">
    <h1>Simon Say's</h1>

    <style>
        .simon {
            text-align: center;
            background-color: #011F3F;
            padding: 50px 0;
        }
        #level-title {
            font-family: 'Press Start 2P', cursive;
            font-size: 3rem;
            color: #FEF2BF;
            margin: 50px;
            display: none;
        }
        .start-btn {
            border: 10px solid black;
            border-radius: 20%;
            width: 200px;
            height: 100px;
            margin: 0 auto;
            background-color: #dacba8;
            font-family: 'Press Start 2P', cursive;
            font-size: 30px;
            padding-top: 20px;
            display: none;
        }
        .simon-content {
            display: block;
            width: 600px;
            margin: auto;
        }
        .simon-btn {
            margin: 25px;
            display: inline-block;
            height: 200px;
            width: 200px;
            border: 10px solid black;
            border-radius: 20%;
        }
        @media (max-width: 767px) {
            .simon-content {
                width: 400px;
            }
            .simon-btn {
                height: 150px;
                width: 150px;
                margin: 15px;
            }
        }
        @media (max-width: 495px) {
            #level-title {
                font-size: 2.4rem;
                margin-left: 0;
                margin-right: 0;
            }
            .simon {
                width: 365px;
            }
            .simon-content {
                margin: 0;
                width: 100%;
            }
            .simon-btn {
                height: 120px;
                width: 120px;
                margin: 10px;
            }
            .simon-settings {
                font-size: 2.5rem !important;
            }
        }
        .simon-settings {
            font-size: 3rem;
            margin-left: 10px;
        }
        .simon-settings input {
            transform: scale(2);
        }
        .simon-settings label {
            margin-right: 50px;
        }
        
        .game-over {
            background-color: red;
            opacity: 0.8;
        }
        .red {
            background-color: red;
        }
        .green {
            background-color: green;
        }
        .blue {
            background-color: blue;
        }
        .yellow {
            background-color: yellow;
        }
        .pressed {
            box-shadow: 0 0 20px white;
            background-color: grey;
        }
    </style>
    
    <div class="simon-settings">
        <input id="active" type="checkbox">
        <label>Active</label>
        <input id="sound-on" type="checkbox">
        <label>Sound on</label>
    </div>
    
    <div class = "simon">
        <h2 id="level-title">Press A Key to Start</h2>
        <div type="button" class="start-btn">Start</div>
        <div class="simon-content">
            <div type="button" id="green" class="simon-btn green">
            </div>
    
            <div type="button" id="red" class="simon-btn red">
            </div>
            <div type="button" id="yellow" class="simon-btn yellow">
            </div>
            
            <div type="button" id="blue" class="simon-btn blue">
            </div>
        </div>
    </div>
    <script type="text/javascript">
        let pattern;
        let buttons = ["green", "red", "yellow", "blue"];
        let currentButton;

        let audio = {"green":null, "red":null, "yellow":null, "blue":null, "wrong":null};

        let gameRunning = false;
        let inputActive = false;
        let isMobile;
        
        $(() => {
            isMobile = window.matchMedia("only screen and (max-width: 760px)").matches;
            if (isMobile) {
                const startBtn = $(".start-btn")
                startBtn.css("display", "block");
                startBtn.click(startGame);
            }
            else {
                $("#level-title").css("display", "block");
                $(document).keydown(startGame);
            }
            $(".simon-btn").click(function(){ validateInput(this.id) });
        });

        function startGame() {
            if (!$("#active").is(":checked") || gameRunning)
                return;
            $("#level-title").css("display", "block");
            $(".start-btn").css("display", "none");
            gameRunning = true;
            pattern = [];
            selectNextColor();
        }

        function selectNextColor() {
            let button = buttons[Math.floor(Math.random() * 4)];
            pattern.push(button);
            setTitle(`Level ${pattern.length}`);
            animateButtonPress(button);
            buttonSFX(button);
            currentButton = 0;
            inputActive = true;
        }

        function validateInput(id) {
            if (!inputActive)
                return;
            if (id === pattern[currentButton]) {
                animateButtonPress(id);
                buttonSFX(id);
                currentButton++;
                if (currentButton === pattern.length) {
                    inputActive = false;
                    setTimeout(selectNextColor, 500);
                }
            }
            else {
                if (isMobile) {
                    $("#level-title").css("display", "none");
                    $(".start-btn").css("display", "block");
                }
                else
                    setTitle("Game Over, Press Any Key to Restart");
                let body = $(".simon");
                body.addClass("game-over");
                setTimeout(function(){body.removeClass("game-over");}, 100);
                animateButtonPress(id);
                buttonSFX("wrong");
                gameRunning = false;
                inputActive = false;
            }
        }

        function animateButtonPress(id) {
            let button = $(`#${id}`);
            button.addClass("pressed");
            setTimeout(function(){button.removeClass("pressed");}, 100);
        }

        function buttonSFX(button) {
            if (!$("#sound-on").is(":checked"))
                return;
            let sound = audio[button];
            if (sound === null) {
                sound = new Audio(`sounds/${button}.mp3`);
                audio[button] = sound;
            }
            sound.play();
        }

        function setTitle(text) {
            $("#level-title").text(text);
        }
    </script>
</div>

<div class="section even">
    <h1>Mad Lib Using ReactJS</h1>
    
    <style>
        form.madlib-form {
            position: relative;
            width: 600px;
            margin: 0 auto 20px auto;
            background: #fff;
            padding: 15px;
            border-radius: 7px;
            box-shadow: 0 1px 5px rgb(138, 137, 137);
        }
        @media (max-width: 767px) {
            form.madlib-form {
                width: 450px;
            }
        }
        @media (max-width: 495px) {
            form.madlib-form {
                width: 350px;
            }
        }
        form.madlib-form input,
        form.madlib-form textarea {
            width: 100%;
            border: none;
            padding: 4px;
            outline: none;
            font-size: 1.2em;
            font-family: inherit;
            resize: none;
        }
        form.madlib-form button {
            position: absolute;
            right: 18px;
            bottom: -18px;
            background: #FF9F29;
            color: #fff;
            border: none;
            border-radius: 50%;
            width: 36px;
            height: 36px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
            cursor: pointer;
            outline: none;
        }
        .error-text {
            color: red;
            text-align: center;
            padding-top: 20px;
            padding-bottom: 10px;
        }
        .error-input::placeholder {
            color: red;
        }
        .reset-btn {
            width: 50px !important;
        }
        pre {
            font-size: 1.75rem;
        }
    </style>

    <h4><strong>Instructions:</strong> Use form below to draft up a Mab Lib. Use [] to define word needed <em>(e.g. A [noun] walked up to me.)</em>. Or if you want use same word multiple times, include comma followed by a id in defition <em>(e.g. A [noun, 0] walked up to me. That [noun, 0] told me...)</em>. On submitting, a form will be generated to fill words, then next the finished story.</em></h4>
    <div id="root"></div>
    <script defer="defer" src="js/main.9fb090fa.js"></script>
</div>

<%- include("partials/footer") -%>